services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx-service
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - frontend
    networks:
      - default-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]

  ###############################
  #       DATA HANDLING         #
  ###############################

  postgres:
    image: postgres:16
    container_name: postgres-service
    ports:
      - 5432:5432
    networks:
      - default-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]

  redis:
    image: redis:7.4.0-alpine
    container_name: redis-service
    ports:
      - 6379:6379
    networks:
      - default-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-service
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - default-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]

  ###############################
  #       GENERAL SERVICES      #
  ###############################

  frontend:
    build:
      context: ./frontend
    container_name: frontend-service
    ports:
      - 3000:3000
    networks:
      - default-network
    restart: on-failure

  backend:
    build:
      context: ./backend
    container_name: backend-service
    ports:
      - 5000:5000
      - 5555:5555
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - default-network
    restart: on-failure

  ###############################
  #       MOTORING SERVICES     #
  ###############################

  pgadmin:
    image: dpage/pgadmin4:8.11.0
    container_name: pgadmin
    ports:
      - 5050:5050
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default-network
    restart: on-failure

  redisinsight:
    image: redis/redisinsight:2.54.0
    container_name: redisinsight-service
    ports:
      - 5540:5540
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - default-network
    restart: on-failure

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus-service
    ports:
      - 9090:9090
    networks:
      - default-network
    restart: on-failure

networks:
  default-network:
    driver: bridge

volumes:
