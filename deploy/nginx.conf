user nginx;

worker_processes auto;

events {
    worker_connections 1024;

    multi_accept on;
    use epoll;
}

error_log /var/log/nginx/error.log crit;
pid       /var/run/nginx.pid;

http {
    include      /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid  30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors  on;

    server_tokens off;

    access_log off;

    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;

    gzip              on;
    gzip_vary         on;
    gzip_min_length  512;
    gzip_comp_level    6;
    gzip_disable "msie6";
    gzip_buffers   16 8k;
    gzip_types   text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied no-cache no-store private expired auth;

    reset_timedout_connection  on;
    keepalive_timeout          30;
    keepalive_requests       1000;
    client_body_timeout        12;
    client_header_timeout      12;
    send_timeout               10;

    client_body_buffer_size       10K;
    client_header_buffer_size      4k;
    client_max_body_size         100M;
    large_client_header_buffers 4 16k;

    limit_req_zone  $binary_remote_addr zone=one:20m rate=20r/s;
    limit_conn_zone $binary_remote_addr zone=addr:20m;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
    include /etc/letsencrypt/options-ssl-nginx.conf;

    # To work with SSL ...

    map $host $valid_host {
        default                  0;
        "domain.ru"              1;
        "api.domain.ru"          1;
        "pgadmin.domain.ru"      1;
        "flower.domain.ru"       1;
        "rabbitmq.domain.ru"     1;
        "redisinsight.domain.ru" 1;
        "prometheus.domain.ru"   1;
    }

    server {
        listen 80;
        listen [::]:80;

        server_name _;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name _;

        http2 on;

        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        # ssl_certificate /etc/letsencrypt/live/domain.ru/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/domain.ru/privkey.pem;
        # ssl_protocols TLSv1.2 TLSv1.3;

        # For chunks next app
        # add_header Cache-Control        "no-store, no-cache, must-revalidate";
        add_header X-Frame-Options        "DENY";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection       "1; mode=block";

        # ...
    }

}
