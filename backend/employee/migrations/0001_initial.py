# Generated by Django 5.1 on 2024-09-08 08:59

import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Shift",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("number", models.CharField(max_length=10, verbose_name="Номер смены")),
                ("start", models.TimeField(verbose_name="Старт смены")),
                ("end", models.TimeField(verbose_name="Конец смены")),
            ],
            options={
                "verbose_name": "Смена",
                "verbose_name_plural": "Смены",
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "cabinet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="employees", to="core.cabinet"
                    ),
                ),
                (
                    "position",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="employees", to="core.position"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employee",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Сотрудник",
                "verbose_name_plural": "Сотрудники",
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField(verbose_name="Дата графика работы")),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="schedules", to="employee.employee"
                    ),
                ),
                (
                    "shift",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="schedules", to="employee.shift"
                    ),
                ),
            ],
            options={
                "verbose_name": "График работы",
                "verbose_name_plural": "График работы",
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=128, verbose_name="Название")),
                ("price", models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name="Цена")),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="services", to="employee.employee"
                    ),
                ),
                (
                    "service_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="services", to="core.servicetype"
                    ),
                ),
            ],
            options={
                "verbose_name": "Услуга",
                "verbose_name_plural": "Услуги",
                "unique_together": {("name", "service_type")},
            },
            managers=[
                ("free", django.db.models.manager.Manager()),
            ],
        ),
    ]
